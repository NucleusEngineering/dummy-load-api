# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http:/www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file contains the sample minimal pod definitions for all of the components that one may need to use Open Match as a match maker.
# You can find the same pod definitions within the sub-folders under the /tutorials/ directory
# Run `kubectl apply -f matchmaker.yaml` to deploy these definitions.

apiVersion: v1
kind: Namespace
metadata:
  name: dummy-load-api-workload
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-load-api-deployment
  namespace: dummy-load-api-workload
  labels:
    app: dummy-load-api
    component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dummy-load-api
  template:
    metadata:
      labels:
        app: dummy-load-api
        component: frontend
    spec:
      containers:
      - name: dummy-load-api
        image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY_NAME}/dummy-load-api:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        # Customize to your liking
        resources:
          requests:
            memory: 512Mi
            ephemeral-storage: 1Gi
            cpu: 250m
          limits:
            memory: 1024Mi
            ephemeral-storage: 1Gi
            cpu: 500m
---
kind: Service
apiVersion: v1
metadata:
  name: dummy-load-api-svc
  namespace: dummy-load-api-workload
  labels:
    app: dummy-load-api
    component: frontend
  annotations:
    cloud.google.com/backend-config: '{"ports": {"8080":"dummy-load-api-backend-config"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: dummy-load-api
    component: frontend
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dummy-load-api-ingress
  namespace: dummy-load-api-workload
  annotations:
    kubernetes.io/ingress.class: gce
  labels:
    app: dummy-load-api
    component: ingress
spec:
  defaultBackend:
    service:
      name: dummy-load-api-svc
      port:
        number: 8080
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: dummy-load-api-backend-config
  namespace: dummy-load-api-workload
  labels:
    app: dummy-load-api
    component: backend
spec:
  timeoutSec: 90
  connectionDraining:
    drainingTimeoutSec: 120
  #securityPolicy:
  #  name: cloudarmor-policy
